# Уважаемые менторы! данный код был написан опираясь на вебинар по итоговому заданию
def salute():  # Функция для вывода приветствия игрока
    print("-------------------")
    print("Привет, сыграем крестики-нолики?")
    print("-------------------")
    print("формат ввода координат: x y ")
    print("x - номер строки  ")
    print("y - номер столбца ")


def table():  # Функция для вывода игрового поля
    print('  0 | 1 | 2')
    print('_____________')
    for i in range(3):  # Цикл для вывода на экран поля с использованием списка pole
        print(f'{i} {pole[i][0]} {pole[i][1]} {pole[i][2]}')
    print()


def ask():  # Функция для ввода данных пользователя и проверка введенных значений
    while True:  # Бесконечный цикл
        comb = input("         Ваш ход: ").split()  # Вводим значения и разбиваем строку на 2 координаты
        if len(comb) != 2:  # Проверка на корректность введенных значений
            print("Введите две координаты")
            continue
        x, y = comb # Присваиваем переменным значения кортежа comb
        if not (x.isdigit()) or not (y.isdigit()):  # Проверка введенных значений (тип int)
            print("Введите числа")
            continue
        x, y = int(x), int(y)  # Преобразуем к типу int введенные координаты
        if 0 > x or x > 2:  # Проверяем корректность введенных значений X
            print("Координаты вне диапазона! ")
            continue
        elif 0 > y or y > 2:  # Проверяем корректность введенных значений X
            print("Координаты вне диапазона! ")
            continue
        if pole[x][y] != " ":  # Проверяем занята ли клетка
            print("Клетка занята! ")
            continue
        return x, y


def check_win():  # Функция для определения выигрышных комбинаций
    win_comb = (((0, 0), (0, 1), (0, 2)), ((1, 0), (1, 1), (1, 2)), ((2, 0), (2, 1), (2, 2)),
                ((0, 2), (1, 1), (2, 0)), ((0, 0), (1, 1), (2, 2)), ((0, 0), (1, 0), (2, 0)),
                ((0, 1), (1, 1), (2, 1)), ((0, 2), (1, 2), (2, 2)))
    for comb in win_comb:
        symbols = []  # Создаем пустой список
        for c in comb:  # Запускаем цикл для добавления в пустой список значений наших координат
            symbols.append(pole[c[0]][c[1]])
        if symbols == ["X", "X", "X"]:  # Проверка списка
            print("Выиграл X")
            return True
        if symbols == ["0", "0", "0"]:  # Проверка списка
            print("Выиграл 0")
            return True
    return False


salute()
pole = [[" ", " ", " "] for i in range(3)]
count = 0
while True: # Бесконечный цикл для определения очередности хода
    count += 1
    table()
    if count % 2 == 1:
        print("Ходит крестик!")
    else:
        print("Ходит нолик!")

    x, y = ask()  # Присваиваем значения функции ask в виде кортежа - переменным x и y соотвественно

    if count % 2 == 1:
        pole[x][y] = "X"
    else:
        pole[x][y] = "0"

    if check_win(): # Проверка с помощью функции на выигрыш
        break

    if count == 9:
        print("Ничья")
        break
